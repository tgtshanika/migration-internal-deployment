
CREATE TABLE APM_APP_DEFAULT_VERSION (
    DEFAULT_VERSION_ID INTEGER,
    APP_NAME VARCHAR2(256),
    APP_PROVIDER VARCHAR2(256),
    DEFAULT_APP_VERSION VARCHAR2(30),
    PUBLISHED_DEFAULT_APP_VERSION VARCHAR2(30),
    TENANT_ID INTEGER,
PRIMARY KEY(DEFAULT_VERSION_ID)
)
/

CREATE SEQUENCE APM_APP_DEFAULT_VERSION_SEQUENCE START WITH 1 INCREMENT BY 1
/

CREATE OR REPLACE TRIGGER APM_APP_DEFAULT_VERSION_TRIGGER
		    BEFORE INSERT
                    ON APM_APP_DEFAULT_VERSION_SEQUENCE
                    REFERENCING NEW AS NEW
                    FOR EACH ROW
                    BEGIN
                    SELECT APM_APP_DEFAULT_VERSION_SEQUENCE.nextval INTO :NEW.DEFAULT_VERSION_ID FROM dual;
                    END;
/

CREATE TABLE APM_FAVOURITE_APPS (
   ID INTEGER ,
   USER_ID VARCHAR(50) NOT NULL,
   TENANT_ID INTEGER NOT NULL,
   APP_ID INTEGER NOT NULL,
   CREATED_TIME DATE NOT NULL,
   PRIMARY KEY (ID),
   FOREIGN KEY(APP_ID) REFERENCES APM_APP(APP_ID) ON DELETE CASCADE,
   UNIQUE (TENANT_ID,USER_ID,APP_ID)
)
/

CREATE SEQUENCE APM_FAVOURITE_APPS_SEQUENCE START WITH 1 INCREMENT BY 1 NOCACHE
/

CREATE OR REPLACE TRIGGER APM_FAVOURITE_APPS_TRIGGER
    BEFORE INSERT
    ON APM_FAVOURITE_APPS
    REFERENCING NEW AS NEW
    FOR EACH ROW
    BEGIN
        SELECT APM_FAVOURITE_APPS_SEQUENCE.nextval INTO :NEW.ID FROM dual;
    END;
/

CREATE TABLE APM_STORE_FAVOURITE_PAGE (
   ID INTEGER ,
   USER_ID VARCHAR(50) NOT NULL,
   TENANT_ID_OF_USER INTEGER NOT NULL,
   TENANT_ID_OF_STORE INTEGER NOT NULL,
   PRIMARY KEY (ID),
)
/

CREATE SEQUENCE APM_STORE_FAVOURITE_PAGE_SEQUENCE START WITH 1 INCREMENT BY 1 NOCACHE
/

CREATE OR REPLACE TRIGGER APM_STORE_FAVOURITE_PAGE_TRIGGER
    BEFORE INSERT
    ON APM_STORE_FAVOURITE_PAGE
    REFERENCING NEW AS NEW
    FOR EACH ROW
    BEGIN
        SELECT APM_STORE_FAVOURITE_PAGE_SEQUENCE.nextval INTO :NEW.ID FROM dual;
    END;
/

CREATE TABLE APM_BUSINESS_OWNER(
  OWNER_ID INTEGER,
  OWNER_NAME VARCHAR2(200) NOT NULL,
  OWNER_EMAIL VARCHA2R(300) NOT NULL,
  OWNER_DESC VARCHAR2(1500),
  OWNER_SITE VARCHAR2(200),
  TENANT_ID INTEGER,
  PRIMARY KEY(OWNER_ID)
)
/

CREATE SEQUENCE APM_BUS_OWNER_SEQUENCE START WITH 1 INCREMENT BY 1 NOCACHE
/

CREATE OR REPLACE TRIGGER APM_BUS_OWNER_TRIGGER
    BEFORE INSERT
    ON APM_BUSINESS_OWNER
    REFERENCING NEW AS NEW
    FOR EACH ROW
    BEGIN
        SELECT APM_BUS_OWNER_SEQUENCE.nextval INTO :NEW.OWNER_ID FROM dual;
    END;
	/

CREATE TABLE APM_BUSINESS_OWNER_PROPERTY(
  OWNER_PROP_ID INTEGER NOT NULL,
  OWNER_ID NOT NULL INTEGER,
  NAME VARCHAR2(200) NOT NULL,
  VALUE VARCHAR2(300) NOT NULL,
  SHOW_IN_STORE BOOLEAN NOT NULL,
  PRIMARY KEY(OWNER_PROP_ID),
  FOREIGN KEY(OWNER_ID) REFERENCES APM_BUSINESS_OWNER(OWNER_ID)
)
/

CREATE SEQUENCE APM_BUS_OWNER_PROP_SEQUENCE START WITH 1 INCREMENT BY 1 NOCACHE
/

CREATE OR REPLACE TRIGGER APM_BUS_OWNER_PROP_TRIGGER
    BEFORE INSERT
    ON APM_BUSINESS_OWNER_PROPERTY
    REFERENCING NEW AS NEW
    FOR EACH ROW
    BEGIN
    SELECT APM_BUS_OWNER_PROP_SEQUENCE.nextval INTO :NEW.OWNER_PROP_ID FROM dual;
    END;
/